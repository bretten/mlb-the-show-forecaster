// <auto-generated />
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using com.brettnamba.MlbTheShowForecaster.GameCards.Infrastructure.Cards.EntityFrameworkCore;

#nullable disable

namespace com.brettnamba.MlbTheShowForecaster.GameCards.Infrastructure.Cards.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(CardsDbContext))]
    [ExcludeFromCodeCoverage]
    partial class CardsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("game_cards")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.Entities.PlayerCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uuid")
                        .HasColumnName("external_id")
                        .HasColumnOrder(2);

                    b.Property<string>("ImageLocation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_location")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasColumnOrder(5);

                    b.Property<int>("OverallRating")
                        .HasColumnType("smallint")
                        .HasColumnName("overall_rating")
                        .HasColumnOrder(10);

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasColumnName("position")
                        .HasColumnOrder(8);

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("rarity")
                        .HasColumnOrder(6);

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("series")
                        .HasColumnOrder(7);

                    b.Property<string>("TeamShortName")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasColumnName("team_short_name")
                        .HasColumnOrder(9);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasColumnName("type")
                        .HasColumnOrder(3);

                    b.Property<ushort>("Year")
                        .HasColumnType("smallint")
                        .HasColumnName("year")
                        .HasColumnOrder(1);

                    b.ComplexProperty<Dictionary<string, object>>("PlayerCardAttributes", "com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.Entities.PlayerCard.PlayerCardAttributes#PlayerCardAttributes", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("ArmAccuracy")
                                .HasColumnType("smallint")
                                .HasColumnName("arm_accuracy")
                                .HasColumnOrder(33);

                            b1.Property<int>("ArmStrength")
                                .HasColumnType("smallint")
                                .HasColumnName("arm_strength")
                                .HasColumnOrder(32);

                            b1.Property<int>("BaseOnBallsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("base_on_balls_per_nine")
                                .HasColumnOrder(15);

                            b1.Property<int>("BaseRunningAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("base_running_ability")
                                .HasColumnOrder(37);

                            b1.Property<int>("BaseRunningAggression")
                                .HasColumnType("smallint")
                                .HasColumnName("base_running_aggression")
                                .HasColumnOrder(38);

                            b1.Property<int>("BattingClutch")
                                .HasColumnType("smallint")
                                .HasColumnName("batting_clutch")
                                .HasColumnOrder(26);

                            b1.Property<int>("Blocking")
                                .HasColumnType("smallint")
                                .HasColumnName("blocking")
                                .HasColumnOrder(35);

                            b1.Property<int>("BuntingAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("bunting_ability")
                                .HasColumnOrder(27);

                            b1.Property<int>("ContactLeft")
                                .HasColumnType("smallint")
                                .HasColumnName("contact_left")
                                .HasColumnOrder(20);

                            b1.Property<int>("ContactRight")
                                .HasColumnType("smallint")
                                .HasColumnName("contact_right")
                                .HasColumnOrder(21);

                            b1.Property<int>("DragBuntingAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("drag_bunting_ability")
                                .HasColumnOrder(28);

                            b1.Property<int>("FieldingAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("fielding_ability")
                                .HasColumnOrder(31);

                            b1.Property<int>("FieldingDurability")
                                .HasColumnType("smallint")
                                .HasColumnName("fielding_durability")
                                .HasColumnOrder(30);

                            b1.Property<int>("HitsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("hits_per_nine")
                                .HasColumnOrder(13);

                            b1.Property<int>("HittingDurability")
                                .HasColumnType("smallint")
                                .HasColumnName("hitting_durability")
                                .HasColumnOrder(29);

                            b1.Property<int>("HomeRunsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("home_runs_per_nine")
                                .HasColumnOrder(16);

                            b1.Property<int>("PitchControl")
                                .HasColumnType("smallint")
                                .HasColumnName("pitch_control")
                                .HasColumnOrder(18);

                            b1.Property<int>("PitchMovement")
                                .HasColumnType("smallint")
                                .HasColumnName("pitch_movement")
                                .HasColumnOrder(19);

                            b1.Property<int>("PitchVelocity")
                                .HasColumnType("smallint")
                                .HasColumnName("pitch_velocity")
                                .HasColumnOrder(17);

                            b1.Property<int>("PitchingClutch")
                                .HasColumnType("smallint")
                                .HasColumnName("pitching_clutch")
                                .HasColumnOrder(12);

                            b1.Property<int>("PlateDiscipline")
                                .HasColumnType("smallint")
                                .HasColumnName("plate_discipline")
                                .HasColumnOrder(25);

                            b1.Property<int>("PlateVision")
                                .HasColumnType("smallint")
                                .HasColumnName("plate_vision")
                                .HasColumnOrder(24);

                            b1.Property<int>("PowerLeft")
                                .HasColumnType("smallint")
                                .HasColumnName("power_left")
                                .HasColumnOrder(22);

                            b1.Property<int>("PowerRight")
                                .HasColumnType("smallint")
                                .HasColumnName("power_right")
                                .HasColumnOrder(23);

                            b1.Property<int>("ReactionTime")
                                .HasColumnType("smallint")
                                .HasColumnName("reaction_time")
                                .HasColumnOrder(34);

                            b1.Property<int>("Speed")
                                .HasColumnType("smallint")
                                .HasColumnName("speed")
                                .HasColumnOrder(36);

                            b1.Property<int>("Stamina")
                                .HasColumnType("smallint")
                                .HasColumnName("stamina")
                                .HasColumnOrder(11);

                            b1.Property<int>("StrikeoutsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("strikeouts_per_nine")
                                .HasColumnOrder(14);
                        });

                    b.HasKey("Id")
                        .HasName("player_cards_pkey");

                    b.HasAlternateKey("Year", "ExternalId")
                        .HasName("player_cards_year_external_id_key");

                    b.ToTable("player_cards", "game_cards");
                });

            modelBuilder.Entity("com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.ValueObjects.PlayerCards.PlayerCardHistoricalRating", b =>
                {
                    b.Property<Guid>("player_card_id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(4)")
                        .HasColumnName("type")
                        .HasColumnOrder(1);

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date")
                        .HasColumnOrder(2);

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date")
                        .HasColumnOrder(3);

                    b.Property<int>("OverallRating")
                        .HasColumnType("smallint")
                        .HasColumnName("overall_rating")
                        .HasColumnOrder(4);

                    b.ComplexProperty<Dictionary<string, object>>("Attributes", "com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.ValueObjects.PlayerCards.PlayerCardHistoricalRating.Attributes#PlayerCardAttributes", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("ArmAccuracy")
                                .HasColumnType("smallint")
                                .HasColumnName("arm_accuracy")
                                .HasColumnOrder(27);

                            b1.Property<int>("ArmStrength")
                                .HasColumnType("smallint")
                                .HasColumnName("arm_strength")
                                .HasColumnOrder(26);

                            b1.Property<int>("BaseOnBallsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("base_on_balls_per_nine")
                                .HasColumnOrder(9);

                            b1.Property<int>("BaseRunningAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("base_running_ability")
                                .HasColumnOrder(31);

                            b1.Property<int>("BaseRunningAggression")
                                .HasColumnType("smallint")
                                .HasColumnName("base_running_aggression")
                                .HasColumnOrder(32);

                            b1.Property<int>("BattingClutch")
                                .HasColumnType("smallint")
                                .HasColumnName("batting_clutch")
                                .HasColumnOrder(20);

                            b1.Property<int>("Blocking")
                                .HasColumnType("smallint")
                                .HasColumnName("blocking")
                                .HasColumnOrder(29);

                            b1.Property<int>("BuntingAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("bunting_ability")
                                .HasColumnOrder(21);

                            b1.Property<int>("ContactLeft")
                                .HasColumnType("smallint")
                                .HasColumnName("contact_left")
                                .HasColumnOrder(14);

                            b1.Property<int>("ContactRight")
                                .HasColumnType("smallint")
                                .HasColumnName("contact_right")
                                .HasColumnOrder(15);

                            b1.Property<int>("DragBuntingAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("drag_bunting_ability")
                                .HasColumnOrder(22);

                            b1.Property<int>("FieldingAbility")
                                .HasColumnType("smallint")
                                .HasColumnName("fielding_ability")
                                .HasColumnOrder(25);

                            b1.Property<int>("FieldingDurability")
                                .HasColumnType("smallint")
                                .HasColumnName("fielding_durability")
                                .HasColumnOrder(24);

                            b1.Property<int>("HitsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("hits_per_nine")
                                .HasColumnOrder(7);

                            b1.Property<int>("HittingDurability")
                                .HasColumnType("smallint")
                                .HasColumnName("hitting_durability")
                                .HasColumnOrder(23);

                            b1.Property<int>("HomeRunsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("home_runs_per_nine")
                                .HasColumnOrder(10);

                            b1.Property<int>("PitchControl")
                                .HasColumnType("smallint")
                                .HasColumnName("pitch_control")
                                .HasColumnOrder(12);

                            b1.Property<int>("PitchMovement")
                                .HasColumnType("smallint")
                                .HasColumnName("pitch_movement")
                                .HasColumnOrder(13);

                            b1.Property<int>("PitchVelocity")
                                .HasColumnType("smallint")
                                .HasColumnName("pitch_velocity")
                                .HasColumnOrder(11);

                            b1.Property<int>("PitchingClutch")
                                .HasColumnType("smallint")
                                .HasColumnName("pitching_clutch")
                                .HasColumnOrder(6);

                            b1.Property<int>("PlateDiscipline")
                                .HasColumnType("smallint")
                                .HasColumnName("plate_discipline")
                                .HasColumnOrder(19);

                            b1.Property<int>("PlateVision")
                                .HasColumnType("smallint")
                                .HasColumnName("plate_vision")
                                .HasColumnOrder(18);

                            b1.Property<int>("PowerLeft")
                                .HasColumnType("smallint")
                                .HasColumnName("power_left")
                                .HasColumnOrder(16);

                            b1.Property<int>("PowerRight")
                                .HasColumnType("smallint")
                                .HasColumnName("power_right")
                                .HasColumnOrder(17);

                            b1.Property<int>("ReactionTime")
                                .HasColumnType("smallint")
                                .HasColumnName("reaction_time")
                                .HasColumnOrder(28);

                            b1.Property<int>("Speed")
                                .HasColumnType("smallint")
                                .HasColumnName("speed")
                                .HasColumnOrder(30);

                            b1.Property<int>("Stamina")
                                .HasColumnType("smallint")
                                .HasColumnName("stamina")
                                .HasColumnOrder(5);

                            b1.Property<int>("StrikeoutsPerNine")
                                .HasColumnType("smallint")
                                .HasColumnName("strikeouts_per_nine")
                                .HasColumnOrder(8);
                        });

                    b.HasKey("player_card_id", "Type", "StartDate")
                        .HasName("player_card_historical_ratings_pkey");

                    b.ToTable("player_card_historical_ratings", "game_cards");
                });

            modelBuilder.Entity("com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.ValueObjects.PlayerCards.PlayerCardHistoricalRating", b =>
                {
                    b.HasOne("com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.Entities.PlayerCard", null)
                        .WithMany("_historicalRatings")
                        .HasForeignKey("player_card_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("player_card_historical_ratings_player_cards_id_fkey");
                });

            modelBuilder.Entity("com.brettnamba.MlbTheShowForecaster.GameCards.Domain.Cards.Entities.PlayerCard", b =>
                {
                    b.Navigation("_historicalRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
