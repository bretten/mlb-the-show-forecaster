services:
  mlb-the-show-forecaster.apps.gateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Urls=http://*:5000
      - Auth__Jwt__Authority=https://cognito-idp.us-west-2.amazonaws.com/us-west-2_KmkWyQs8s
      - Auth__Jwt__Audience=6v5e3fibffpkoqnk04o3cfdalm
      - Auth__AllowCors=false
      - Aws__Region=us-west-2
      - Spa__Active=true
      - SignalRMultiplexer__RelayedHubs__0__Url=http://host.docker.internal:5001/job-hub
      - SignalRMultiplexer__RelayedHubs__1__Url=http://host.docker.internal:5002/job-hub
      - SignalRMultiplexer__RelayedHubs__2__Url=http://host.docker.internal:5003/job-hub
    ports:
      - "5000:5000"

  mlb-the-show-forecaster.apps.marketplace-watcher:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RunMigrations=true
      - Urls=http://*:5003
      - Api__Performance__BaseAddress=http://host.docker.internal:5002
      - Forecasting__PlayerMatcher__BaseAddress=http://host.docker.internal:5001
      - ConnectionStrings__Cards=Server=host.docker.internal;Username=postgres;Password=postgres;Port=54320;Database=mlb_forecaster_test;
      - ConnectionStrings__Forecasts=Server=host.docker.internal;Username=postgres;Password=postgres;Port=54320;Database=mlb_forecaster_test;
      - ConnectionStrings__Marketplace=Server=host.docker.internal;Username=postgres;Password=postgres;Port=54320;Database=mlb_forecaster_test;
      - ConnectionStrings__TrendsMongoDb=mongodb://root:example@host.docker.internal:27017/?authSource=admin
      - Messaging__RabbitMq__HostName=host.docker.internal
      - Messaging__RabbitMq__UserName=guest
      - Messaging__RabbitMq__Password=guest
    ports:
      - "5003:5003"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

  mlb-the-show-forecaster.apps.performance-tracker:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RunMigrations=true
      - Urls=http://*:5002
      - ConnectionStrings__PlayerSeasons=Server=host.docker.internal;Username=postgres;Password=postgres;Port=54320;Database=mlb_forecaster_test;
      - Messaging__RabbitMq__HostName=host.docker.internal
      - Messaging__RabbitMq__UserName=guest
      - Messaging__RabbitMq__Password=guest
    ports:
      - "5002:5002"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  mlb-the-show-forecaster.apps.player-tracker:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RunMigrations=true
      - Urls=http://*:5001
      - ConnectionStrings__Players=Server=host.docker.internal;Username=postgres;Password=postgres;Port=54320;Database=mlb_forecaster_test;
      - Messaging__RabbitMq__HostName=host.docker.internal
      - Messaging__RabbitMq__UserName=guest
      - Messaging__RabbitMq__Password=guest
    ports:
      - "5001:5001"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres-db:
    image: postgres:16-alpine
    restart: always
    environment:
      - LANG=en_US.utf8
      - POSTGRES_INITDB_ARGS=--locale-provider=icu --icu-locale=en-US
      - POSTGRES_DB=mlb_forecaster_test
      - POSTGRES_PASSWORD=postgres
    ports:
      - "54320:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d mlb_forecaster_test" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongo:
    image: mongo:noble
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
