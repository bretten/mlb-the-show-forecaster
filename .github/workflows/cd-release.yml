name: CD - Release

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      ref:
        description: 'The ref (tag, branch or commit) to release'
        required: false
        default: 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_WORK_DIR: infra

jobs:
  publish:

    runs-on: ubuntu-latest

    permissions:
      contents: read # For checking out
      packages: write # For publishing the container images

    steps:
      - name: Set the container image tag name
        run: |
          # Use the tag name
          TAG_NAME=${{ github.event.release.tag_name }}

          # Set the tag as an environment variable
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG_NAME }}

      - name: Login to GitHub container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for labeling the published images
        id: metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and publish - Player Tracker
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./src/PlayerStatus/Apps/MlbTheShowForecaster.PlayerStatus.Apps.PlayerTracker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/player-tracker:latest
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/player-tracker:${{ env.TAG_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and publish - Performance Tracker
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./src/Performance/Apps/MlbTheShowForecaster.Performance.Apps.PerformanceTracker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/performance-tracker:latest
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/performance-tracker:${{ env.TAG_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and publish - Marketplace Watcher
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./src/GameCards/Apps/MlbTheShowForecaster.GameCards.Apps.MarketplaceWatcher/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/marketplace-watcher:latest
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/marketplace-watcher:${{ env.TAG_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and publish - Gateway
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./src/Apps/MlbTheShowForecaster.Apps.Gateway/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/gateway:latest
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}/gateway:${{ env.TAG_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: publish
    runs-on: ubuntu-latest

    permissions:
      contents: read # For checking out

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG_NAME }}

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ secrets.TERRAFORM_ROLE }}
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - name: Terraform fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ${{ env.TF_WORK_DIR }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORK_DIR }}

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: ${{ env.TF_WORK_DIR }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -no-color
        continue-on-error: true
        working-directory: ${{ env.TF_WORK_DIR }}
        env:
          TF_VAR_image_tag: ${{ env.TAG_NAME }}
          TF_VAR_use_storage: ${{ vars.DEPLOY_CONTAINER_STORAGE }}
          TF_VAR_aspnetcore_environment: ${{ vars.ASPNETCORE_ENVIRONMENT }}
          TF_VAR_scheme_private_access: ${{ vars.SCHEME_PRIVATE_ACCESS }}
          TF_VAR_jwt_authority: ${{ secrets.JWT_AUTHORITY }}
          TF_VAR_jwt_audience: ${{ secrets.JWT_AUDIENCE }}
          TF_VAR_pgsql_user: ${{ secrets.PGSQL_USER }}
          TF_VAR_pgsql_pass: ${{ secrets.PGSQL_PASS }}
          TF_VAR_pgsql_db_name: ${{ secrets.PGSQL_DB_NAME }}
          TF_VAR_mongodb_user: ${{ secrets.MONGODB_USER }}
          TF_VAR_mongodb_pass: ${{ secrets.MONGODB_PASS }}
          TF_VAR_rabbitmq_user: ${{ secrets.RABBITMQ_USER }}
          TF_VAR_rabbitmq_pass: ${{ secrets.RABBITMQ_PASS }}